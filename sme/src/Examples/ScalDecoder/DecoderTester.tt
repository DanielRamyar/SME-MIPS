﻿<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<# int BitWidth = 8; #>
<# int pow = 256; #>
using System;
using SME;

namespace ScalDecoder 
{

	public class DecoderTester : SimulationProcess 
	{
<# for (int i = 0; i < pow; i++)
{
#>
		[InputBus] Output<#Write(""+i);#> output<#Write(""+i);#>;
<#
}
#>

<# for (int i = 0; i < BitWidth; i++)
{
#>
		[OutputBus] Input<#Write(""+i);#> input<#Write(""+i);#>;
<#
}
#>

		public async override System.Threading.Tasks.Task Run()
		{
			await ClockAsync();

<# 
for (int i = 0; i < pow; i++) {
	for (int j = 0; j < BitWidth; j++) 
	{
#>
			input<#Write(""+j);#>.Bit = (<#Write(""+i);#> >> <#Write(""+j);#> & 1) == 1;
<#
	}
#>
			await ClockAsync();
<#
	for (int j = 0; j < pow; j++)
	{
#>
			System.Diagnostics.Debug.Assert(<# if (i != j) { Write("!"); } #>output<#Write(""+j);#>.Bit);
<#
	}
#>

<#
}
#>
		}
	}

}
